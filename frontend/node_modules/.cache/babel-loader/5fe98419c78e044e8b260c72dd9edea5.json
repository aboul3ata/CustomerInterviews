{"ast":null,"code":"import _classCallCheck from\"/Users/aliabouelatta/Dropbox/Cornell/Spring21/bss/p/interviews/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/aliabouelatta/Dropbox/Cornell/Spring21/bss/p/interviews/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/aliabouelatta/Dropbox/Cornell/Spring21/bss/p/interviews/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/aliabouelatta/Dropbox/Cornell/Spring21/bss/p/interviews/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";// // Import FirebaseAuth and firebase.\n// import React from 'react';\nimport React from'react';import StyledFirebaseAuth from'react-firebaseui/StyledFirebaseAuth';import firebase from'firebase';import Dashboard from'../Dashboard/Dashboard';// Configure Firebase.\nimport{jsx as _jsx}from\"react/jsx-runtime\";var config={apiKey:\"AIzaSyAJmTMuuAhFREEI8THl2f3SDAOewLjeozU\",authDomain:\"interviews-4b797.firebaseapp.com\",projectId:\"interviews-4b797\",storageBucket:\"interviews-4b797.appspot.com\",messagingSenderId:\"114506550373\",appId:\"1:114506550373:web:cce92fc58d26ea99124a8c\"};firebase.initializeApp(config);var SignInScreen=/*#__PURE__*/function(_React$Component){_inherits(SignInScreen,_React$Component);var _super=_createSuper(SignInScreen);function SignInScreen(){var _this;_classCallCheck(this,SignInScreen);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isSignedIn:false// Local signed-in state.\n};_this.uiConfig={// Popup signin flow rather than redirect flow.\nsignInFlow:'popup',// We will display Google and Facebook as auth providers.\nsignInOptions:[firebase.auth.EmailAuthProvider.PROVIDER_ID],callbacks:{// Avoid redirects after sign-in.\nsignInSuccessWithAuthResult:function signInSuccessWithAuthResult(){return false;}}};return _this;}_createClass(SignInScreen,[{key:\"componentDidMount\",value:// Listen to the Firebase Auth state and set the local state.\nfunction componentDidMount(){var _this2=this;this.unregisterAuthObserver=firebase.auth().onAuthStateChanged(function(user){return _this2.setState({isSignedIn:!!user});});}// Make sure we un-register Firebase observers when the component unmounts.\n},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.unregisterAuthObserver();}},{key:\"render\",value:function render(){if(!this.state.isSignedIn){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(StyledFirebaseAuth,{uiConfig:this.uiConfig,firebaseAuth:firebase.auth()})});}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Dashboard,{name:firebase.auth().currentUser.displayName,email:firebase.auth().currentUser.email})});}}]);return SignInScreen;}(React.Component);export default SignInScreen;","map":{"version":3,"sources":["/Users/aliabouelatta/Dropbox/Cornell/Spring21/bss/p/interviews/frontend/src/Landing/Sign.js"],"names":["React","StyledFirebaseAuth","firebase","Dashboard","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","SignInScreen","state","isSignedIn","uiConfig","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","unregisterAuthObserver","onAuthStateChanged","user","setState","currentUser","displayName","email","Component"],"mappings":"wuBAAA;AACA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,qCAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CAEA;2CACA,GAAIC,CAAAA,MAAM,CAAG,CACTC,MAAM,CAAE,yCADC,CAETC,UAAU,CAAE,kCAFH,CAGTC,SAAS,CAAE,kBAHF,CAITC,aAAa,CAAE,8BAJN,CAKTC,iBAAiB,CAAE,cALV,CAMTC,KAAK,CAAE,2CANE,CAAb,CASAR,QAAQ,CAACS,aAAT,CAAuBP,MAAvB,E,GAEMQ,CAAAA,Y,+VAGJC,K,CAAQ,CACNC,UAAU,CAAE,KAAM;AADZ,C,OAKRC,Q,CAAW,CACT;AACAC,UAAU,CAAE,OAFH,CAGT;AACAC,aAAa,CAAE,CACXf,QAAQ,CAACgB,IAAT,CAAcC,iBAAd,CAAgCC,WADrB,CAJN,CAOTC,SAAS,CAAE,CACT;AACAC,2BAA2B,CAAE,6CAAM,MAAN,EAFpB,CAPF,C,yEAaX;AACA,4BAAoB,iBAClB,KAAKC,sBAAL,CAA8BrB,QAAQ,CAACgB,IAAT,GAAgBM,kBAAhB,CAC1B,SAACC,IAAD,QAAU,CAAA,MAAI,CAACC,QAAL,CAAc,CAACZ,UAAU,CAAE,CAAC,CAACW,IAAf,CAAd,CAAV,EAD0B,CAA9B,CAGD,CAED;oCACA,+BAAuB,CACrB,KAAKF,sBAAL,GACD,C,sBAED,iBAAS,CACP,GAAI,CAAC,KAAKV,KAAL,CAAWC,UAAhB,CAA4B,CAC1B,mBACE,kCACE,KAAC,kBAAD,EAAoB,QAAQ,CAAE,KAAKC,QAAnC,CAA6C,YAAY,CAAEb,QAAQ,CAACgB,IAAT,EAA3D,EADF,EADF,CAKD,CACD,mBAEE,kCAIE,KAAC,SAAD,EAAW,IAAI,CAAGhB,QAAQ,CAACgB,IAAT,GAAgBS,WAAhB,CAA4BC,WAA9C,CAA2D,KAAK,CAAI1B,QAAQ,CAACgB,IAAT,GAAgBS,WAAhB,CAA4BE,KAAhG,EAJF,EAFF,CASD,C,0BAlDwB7B,KAAK,CAAC8B,S,EAoDjC,cAAelB,CAAAA,YAAf","sourcesContent":["// // Import FirebaseAuth and firebase.\n// import React from 'react';\n\nimport React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport Dashboard from '../Dashboard/Dashboard'\n \n// Configure Firebase.\nvar config = {\n    apiKey: \"AIzaSyAJmTMuuAhFREEI8THl2f3SDAOewLjeozU\",\n    authDomain: \"interviews-4b797.firebaseapp.com\",\n    projectId: \"interviews-4b797\",\n    storageBucket: \"interviews-4b797.appspot.com\",\n    messagingSenderId: \"114506550373\",\n    appId: \"1:114506550373:web:cce92fc58d26ea99124a8c\"\n  };\n\nfirebase.initializeApp(config);\n \nclass SignInScreen extends React.Component {\n \n  // The component's Local state.\n  state = {\n    isSignedIn: false // Local signed-in state.\n  };\n \n  // Configure FirebaseUI.\n  uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n        firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n \n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n        (user) => this.setState({isSignedIn: !!user})\n    );\n  }\n  \n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n \n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\n        </div>\n      );\n    }\n    return (\n\n      <div>\n        {/* <h1>My App</h1>\n        <p>Welcome {firebase.auth().currentUser.displayName}! You are now signed-in!</p>\n        <a onClick={() => firebase.auth().signOut()}>Sign-out</a> */}\n        <Dashboard name= {firebase.auth().currentUser.displayName} email = {firebase.auth().currentUser.email}></Dashboard>\n      </div>\n    );\n  }\n}\nexport default SignInScreen;"]},"metadata":{},"sourceType":"module"}