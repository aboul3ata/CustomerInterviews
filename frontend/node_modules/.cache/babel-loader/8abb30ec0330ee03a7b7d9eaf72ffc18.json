{"ast":null,"code":"var _jsxFileName = \"/Users/aliabouelatta/Dropbox/Cornell/Spring21/bss/p/interviews/frontend/src/Landing/Sign.js\";\n// Import FirebaseAuth and firebase.\nimport React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase'; // Configure Firebase.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar config = {\n  apiKey: \"AIzaSyAJmTMuuAhFREEI8THl2f3SDAOewLjeozU\",\n  authDomain: \"interviews-4b797.firebaseapp.com\",\n  projectId: \"interviews-4b797\",\n  storageBucket: \"interviews-4b797.appspot.com\",\n  messagingSenderId: \"114506550373\",\n  appId: \"1:114506550373:web:cce92fc58d26ea99124a8c\"\n};\nfirebase.initializeApp(config);\n\nclass SignInScreen extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.uiConfig = {\n      // Popup signin flow rather than redirect flow.\n      signInFlow: 'popup',\n      // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n      signInSuccessUrl: '/signedIn',\n      // We will display Google and Facebook as auth providers.\n      signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        // Avoid redirects after sign-in.\n        signInSuccessWithAuthResult: () => false\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please sign-in:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledFirebaseAuth, {\n        uiConfig: uiConfig,\n        firebaseAuth: firebase.auth()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SignInScreen;","map":{"version":3,"sources":["/Users/aliabouelatta/Dropbox/Cornell/Spring21/bss/p/interviews/frontend/src/Landing/Sign.js"],"names":["React","StyledFirebaseAuth","firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","SignInScreen","Component","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;;;AACA,IAAIC,MAAM,GAAG;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,kCAFH;AAGTC,EAAAA,SAAS,EAAE,kBAHF;AAITC,EAAAA,aAAa,EAAE,8BAJN;AAKTC,EAAAA,iBAAiB,EAAE,cALV;AAMTC,EAAAA,KAAK,EAAE;AANE,CAAb;AAWAP,QAAQ,CAACQ,aAAT,CAAuBP,MAAvB;;AACA,MAAMQ,YAAN,SAA2BX,KAAK,CAACY,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAEvCC,QAFuC,GAE5B;AACb;AACAC,MAAAA,UAAU,EAAE,OAFC;AAGb;AACAC,MAAAA,gBAAgB,EAAE,WAJL;AAKb;AACAC,MAAAA,aAAa,EAAE,CACbd,QAAQ,CAACe,IAAT,CAAcC,iBAAd,CAAgCC,WADnB,CANF;AASbC,MAAAA,SAAS,EAAE;AACT;AACAC,QAAAA,2BAA2B,EAAE,MAAM;AAF1B;AATE,KAF4B;AAAA;;AAkBzCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAET,QAA9B;AAAwC,QAAA,YAAY,EAAEX,QAAQ,CAACe,IAAT;AAAtD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA1BwC;;AA6B3C,eAAeN,YAAf","sourcesContent":["// Import FirebaseAuth and firebase.\nimport React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n \n// Configure Firebase.\nvar config = {\n    apiKey: \"AIzaSyAJmTMuuAhFREEI8THl2f3SDAOewLjeozU\",\n    authDomain: \"interviews-4b797.firebaseapp.com\",\n    projectId: \"interviews-4b797\",\n    storageBucket: \"interviews-4b797.appspot.com\",\n    messagingSenderId: \"114506550373\",\n    appId: \"1:114506550373:web:cce92fc58d26ea99124a8c\"\n  };\n\n\n\nfirebase.initializeApp(config);\nclass SignInScreen extends React.Component {\n// Configure FirebaseUI.\n    uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: '/signedIn',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n    firebase.auth.EmailAuthProvider.PROVIDER_ID\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n \n\n  render() {\n    return (\n      <div>\n        <h1>My App</h1>\n        <p>Please sign-in:</p>\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\n      </div>\n    );\n  }\n}\n\nexport default SignInScreen;"]},"metadata":{},"sourceType":"module"}